Algorithm - 

1) What the header file needs:
	a) header guard
	b) include libraries
	c) Player class
	d) Public/private declarations
	e) In public:
		1) constructor
		2) destructor
		3) setter and getter for number
		4) shoot ball function
	f) In private:
		1) Number (randomly generated)
	g) #endif end header guard


Game conditions:

1) 2 Players on the heap
2) 3 files for c++, 2 for Java
3) Character array
4) Play again loop


How game will work (actual algorithm):

1) Intro
2) 2 players will be made as instances of the Player class
3) Loop will be executed to keep condition going until the letter ‘E’
   is displayed from the character array
4) Random number will be generated and saved in a variable (this variable will be used to pass to shootBall function.
5) Number will be sent to shoot Ball function
6) In the shoot ball function:
	a) If the randomly generated number is a 1, the player hit the shot
	b) If the randomly generated number is a 0, the player missed the shot
	c) Then the result will be evaluated:
		1) If player 1 got a 1, and player 2 got a 0, player 2 gets a letter
			a) counter will be increased by 1
		2) If player 1 got a 0, and player 2 got a 1, player 1 gets a letter
			a) counter will be increased by 1
		3) If they both get a 1, do nothing, loop again //you don’t need conditions for this
		4) If they both get a 0, do nothing, loop again //you don’t need conditions for this
7) This will then return if the player hit or missed the shot
8) Another condition needs to be made:
	a) If player 1 or player 2 hit the ‘E’ in horse, or in other words get the word HORSE, 
		indicate that they lose and the other player wins
	b) Whichever letter variable hits the number 5 first will be the loser
9) Shootball will keep executing until a player gets the word HORSE
10) After this is done, delete both of the players off of the stack so there will be no memory leaks
11) Set both of the counter variables back to zero (to prevent an infinite loop)


~This will all be wrapped in a do while loop
	1) Will keep going if the user enters ‘Y’
	2) Otherwise the program will break
	3) If the user enters anything other than Y or N, it will tell them to enter a valid letter

